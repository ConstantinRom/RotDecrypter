<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>